{"version":3,"sources":["actions/types.js","config.js","actions/index.js","AuthorizationProtectedRoute.jsx","LoggedInRedirection.jsx","components/loginView/loginView.jsx","components/defaultView/logo.svg","components/defaultView/defaultView.jsx","App.jsx","reportWebVitals.js","reducers/index.js","reducers/is-logged-in-reducer.js","reducers/show-loading-wheel-reducer.js","index.jsx"],"names":["IS_AUTHENTICATED","SHOW_LOADING_WHEEL","apiUrl","process","axios","defaults","baseURL","withCredentials","headers","get","post","authenticate","username","password","history","dispatch","then","response","type","payload","push","catch","error","alert","verifyAccessToken","recurse","refreshError","refreshAccessToken","firstCall","logout","connect","state","isLoggedIn","props","Component","component","fallbackRoute","render","routeProps","to","redirectTo","fallbackComponent","actions","React","useState","setUsername","setPassword","useHistory","className","Grid","container","direction","justifyContent","alignItems","item","xs","sm","md","lg","xl","Paper","elevation","TextField","onChange","event","target","value","variant","label","placeholder","fullWidth","required","Button","onClick","color","src","logo","alt","href","rel","App","this","setInterval","showLoadingWheel","CircularProgress","exact","path","DefaultView","LoginView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f916a0f5.chunk.js","sourcesContent":["export const IS_AUTHENTICATED = \"is_authenticated\";\r\nexport const SHOW_LOADING_WHEEL = \"show_loading_wheel\";\r\n","const httpProtocol =\r\n  process.env.REACT_APP_USE_SSL === \"false\" ? \"http\" : \"https\";\r\nconst wsProtocol = process.env.REACT_APP_USE_SSL === \"false\" ? \"ws\" : \"wss\";\r\n\r\nexport const apiUrl = `${httpProtocol}://${process.env.REACT_APP_API_HOST}/api/`;\r\nexport const wsUrl = `${wsProtocol}://${process.env.REACT_APP_API_HOST}/ws/`;\r\n","import axios from \"axios\";\r\nimport { IS_AUTHENTICATED, SHOW_LOADING_WHEEL } from \"./types\";\r\nimport { apiUrl } from \"../config\";\r\n\r\naxios.defaults.baseURL = `${apiUrl}`;\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.headers.get[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nexport const authenticate = (username, password, history) => (dispatch) => {\r\n  axios\r\n    .post(\"auth/login/\", { username, password })\r\n    .then((response) => {\r\n      dispatch({ type: IS_AUTHENTICATED, payload: true });\r\n      history.push(\"/\");\r\n    })\r\n    .catch((error) => {\r\n      alert(\"Invalid username or password.\");\r\n      dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n    });\r\n};\r\n\r\nexport const verifyAccessToken =\r\n  (recurse = true) =>\r\n  (dispatch) => {\r\n    axios\r\n      .post(\"auth/verify/\")\r\n      .then((response) => {\r\n        dispatch({ type: IS_AUTHENTICATED, payload: true });\r\n      })\r\n      .catch((error) => {\r\n        if (recurse) {\r\n          axios\r\n            .post(\"auth/verify/refresh/\")\r\n            .then((response) => {\r\n              verifyAccessToken(false);\r\n            })\r\n            .catch((refreshError) => {\r\n              dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n            });\r\n        } else {\r\n          dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n        }\r\n      });\r\n  };\r\n\r\nexport const refreshAccessToken =\r\n  (firstCall = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      await axios.post(\"auth/verify/refresh/\");\r\n      await axios.post(\"auth/refresh/\");\r\n      dispatch({ type: IS_AUTHENTICATED, payload: true });\r\n    } catch (e) {\r\n      dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n    }\r\n    if (firstCall) {\r\n      dispatch({ type: SHOW_LOADING_WHEEL, payload: false });\r\n    }\r\n  };\r\n\r\nexport const logout = () => (dispatch) => {\r\n  axios\r\n    .post(\"auth/logout/\")\r\n    .then((response) => {\r\n      dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: IS_AUTHENTICATED, payload: false });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthorizationProtectedRoute = (props) => {\r\n  /*\r\n   * If the user is signed in then return the component\r\n   * Else redirect the user to fallback Route.\r\n   */\r\n\r\n  const { component: Component, isLoggedIn, fallbackRoute } = props;\r\n\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Route\r\n        render={(routeProps) => <Component {...routeProps} {...props} />}\r\n      />\r\n    );\r\n  }\r\n  return <Redirect to={fallbackRoute} />;\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AuthorizationProtectedRoute);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst LoggedInRedirection = (props) => {\r\n  /*\r\n   * If the user is signed in then redirect the user to `redirectTo` route.\r\n   * Else render the fallbackComponent.\r\n   */\r\n  const { redirectTo, isLoggedIn, fallbackComponent: Component } = props;\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  return (\r\n    <Route render={(routeProps) => <Component {...routeProps} {...props} />} />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LoggedInRedirection);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../../actions\";\r\nimport \"./loginView.css\";\r\n\r\nfunction LoginView({ authenticate, verifyAccessToken }) {\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const sendLogin = () => {\r\n    if (username === \"\") {\r\n      alert(\"Username cannot be blank.\");\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      alert(\"Password cannot be blank.\");\r\n      return;\r\n    }\r\n    authenticate(username, password, history);\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-box\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={10} sm={10} md={8} lg={6} xl={4}>\r\n          <Paper elevation={10}>\r\n            <TextField\r\n              onChange={(event) => setUsername(event.target.value)}\r\n              value={username}\r\n              variant=\"outlined\"\r\n              label=\"Username\"\r\n              placeholder=\"Enter username\"\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              value={password}\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              placeholder=\"Enter password\"\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n            />\r\n            <Button\r\n              onClick={sendLogin}\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              Login\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, actions)(LoginView);\r\n","export default __webpack_public_path__ + \"static/media/logo.28940f2e.svg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./defaultView.css\";\r\nimport * as actions from \"../../actions\";\r\n\r\nfunction DefaultView({ logout }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit\r\n          <code>\r\n            src/App.js\r\n          </code>\r\n          and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      <Button color=\"secondary\" variant=\"contained\" onClick={logout}>\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, actions)(DefaultView);\r\n","import { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport * as actions from \"./actions\";\r\nimport AuthorizationProtectedRoute from \"./AuthorizationProtectedRoute\";\r\nimport LoggedInRedirection from \"./LoggedInRedirection\";\r\nimport LoginView from \"./components/loginView\";\r\nimport DefaultView from \"./components/defaultView\";\r\n\r\nclass App extends React.Component {\r\n  // { isLoggedIn, refreshAccessToken }\r\n\r\n  componentDidMount() {\r\n    const { refreshAccessToken } = this.props;\r\n    refreshAccessToken(true);\r\n    const interval = 4 * 60 * 1000; // every 4 minutes\r\n    setInterval(refreshAccessToken, interval);\r\n  }\r\n\r\n  render() {\r\n    const { showLoadingWheel } = this.props;\r\n\r\n    if (showLoadingWheel) {\r\n      return (\r\n        <div className=\"loading-app-progress\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <AuthorizationProtectedRoute\r\n              exact\r\n              path=\"/\"\r\n              component={DefaultView}\r\n              fallbackRoute=\"/login\"\r\n            />\r\n            <LoggedInRedirection\r\n              path=\"/login\"\r\n              redirectTo=\"/\"\r\n              fallbackComponent={LoginView}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    showLoadingWheel: state.showLoadingWheel,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(App);\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport IsLoggedInReducer from \"./is-logged-in-reducer\";\r\nimport ShowLoadingWheelReducer from \"./show-loading-wheel-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  isLoggedIn: IsLoggedInReducer,\r\n  showLoadingWheel: ShowLoadingWheelReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { IS_AUTHENTICATED } from \"../actions/types\";\r\n\r\nexport default function reducer(state = false, action) {\r\n  switch (action.type) {\r\n    case IS_AUTHENTICATED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SHOW_LOADING_WHEEL } from \"../actions/types\";\r\n\r\nexport default function reducer(state = true, action) {\r\n  switch (action.type) {\r\n    case SHOW_LOADING_WHEEL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}